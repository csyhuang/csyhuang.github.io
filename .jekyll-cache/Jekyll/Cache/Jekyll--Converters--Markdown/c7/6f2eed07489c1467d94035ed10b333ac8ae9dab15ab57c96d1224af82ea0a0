I"è<p>Suppose I have a Hive table that has a column of sequences,</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+------------------+
|          sequence|
+------------------+
|      [3, 23, 564]|
+------------------+
</code></pre></div></div>

<p>how to generate a column that contains permutations of each sequence in multiple rows? The desired output shall look like:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>+------------------+------------------+
|          sequence|       permutation|
+------------------+------------------+
|      [3, 23, 564]|      [3, 23, 564]|
|      [3, 23, 564]|      [3, 564, 23]|
|      [3, 23, 564]|      [23, 3, 564]|
|      [3, 23, 564]|      [23, 564, 3]|
|      [3, 23, 564]|      [564, 3, 23]|
|      [3, 23, 564]|      [564, 23, 3]|
+------------------+------------------+
</code></pre></div></div>

<p>In order to get multiple rows out of each row, we need to use the function <code class="highlighter-rouge">explode</code>. First, we write a user-defined function (UDF) to return the list of permutations given a array (sequence):</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">itertools</span>
<span class="kn">from</span> <span class="nn">pyspark.sql</span> <span class="kn">import</span> <span class="n">SparkSession</span><span class="p">,</span> <span class="n">Row</span>
<span class="kn">from</span> <span class="nn">pyspark.sql.types</span> <span class="kn">import</span> <span class="n">IntegerType</span><span class="p">,</span> <span class="n">ArrayType</span>

<span class="o">@</span><span class="n">udf_type</span><span class="p">(</span><span class="n">ArrayType</span><span class="p">(</span><span class="n">ArrayType</span><span class="p">(</span><span class="n">IntegerType</span><span class="p">())))</span>
<span class="k">def</span> <span class="nf">permutation</span><span class="p">(</span><span class="n">a_list</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">list</span><span class="p">(</span><span class="n">itertools</span><span class="p">.</span><span class="n">permutations</span><span class="p">(</span><span class="n">a_list</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">a_list</span><span class="p">)))</span>
</code></pre></div></div>

<p>The <code class="highlighter-rouge">udf_type</code> function is adapted from the <a href="https://johnpaton.net/posts/clean-spark-udfs/">blog post by John Paton</a>. The output type is specified to be an array of ‚Äúarray of integers‚Äù.</p>

<p>The application of this function with <code class="highlighter-rouge">explode</code> will yield the result above:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span> <span class="o">=</span> <span class="n">spark_session</span><span class="p">.</span><span class="n">createDataFrame</span><span class="p">([</span><span class="n">Row</span><span class="p">(</span><span class="n">sequence</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">564</span><span class="p">])])</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">withColumn</span><span class="p">(</span><span class="s">'permutation'</span><span class="p">,</span> <span class="n">F</span><span class="p">.</span><span class="n">explode</span><span class="p">(</span><span class="n">permutation</span><span class="p">(</span><span class="n">F</span><span class="p">.</span><span class="n">col</span><span class="p">(</span><span class="s">'sequence'</span><span class="p">))))</span>
</code></pre></div></div>

:ET