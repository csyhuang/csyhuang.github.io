I"v<h3 id="update-ecmwf-api-clients-on-pip-and-conda">Update: ECMWF API Clients on pip and conda</h3>

<p>The ECMWF API Python Client is now available on pypi and anaconda.<br />
The Climate Corporation has distributed the ECMWF API Python Client on 
pypi. Now it can be installed via:</p>

<blockquote>
  <p>pip install ecmwf-api-client</p>
</blockquote>

<p>Anaconda users on OS X/linux system can install the package via:</p>

<blockquote>
  <p>conda install -c bioconda ecmwfapi</p>
</blockquote>

<!-- 
### Old steps (1-3)

```
(1) Installing the package requires the python Setuptools. You can set it up locally with the command:

> wget https://bootstrap.pypa.io/ez_setup.py -O - | python - --user

(2) Download the Python library package and unzip it (You can do it in any directory)
> wget https://software.ecmwf.int/wiki/download/attachments/56664858/ecmwf-api-client-python.tgz
> tar zxf ecmwf-api-client-python.tgz

You shall see four items extracted:
- example.py
- ecmwfapi/__init__.py
- ecmwfapi/api.py
- setup.py

(3) In the directory with these four items, install the package with:
> python setup.py install --user
```
 -->
<!--more-->
<p>To use the sample script, you need an API key ( .ecmwfapirc ) placed in your home directory. You can retrieve that by logging in: https://api.ecmwf.int/v1/key/
Create a file named “.ecmwfapirc” in your home directory and put in the content shown on the page:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
    "url"   : "https://api.ecmwf.int/v1",
    "key"   : "(...)",
    "email" : "(...)"
}
</code></pre></div></div>

<p>After doing that, in the directory with the sample script example.py, you can test the package by running it:</p>
<blockquote>
  <p>python example.py</p>
</blockquote>

<p>You should see it successfully retrieves a .grib file if the package has been set up properly.</p>

<p>There are <a href="https://software.ecmwf.int/wiki/display/WEBAPI/Python+ERA-interim+examples">sample scripts</a> 
available on the ECMWF website (look under “Same request NetCDF format”). Below is a example of python 
script I wrote to retrieves zonal wind, meridional wind and temperature data at all pressure levels 
during the time period 2017-07-01 to 2017-07-31 in 6-hour intervals:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">from</span> <span class="nn">ecmwfapi</span> <span class="kn">import</span> <span class="n">ECMWFDataServer</span>
<span class="n">server</span> <span class="o">=</span> <span class="n">ECMWFDataServer</span><span class="p">()</span>

<span class="n">param_u</span><span class="p">,</span> <span class="n">param_v</span><span class="p">,</span> <span class="n">param_t</span> <span class="o">=</span> <span class="s">"131.128"</span><span class="p">,</span> <span class="s">"132.128"</span><span class="p">,</span> <span class="s">"130.128"</span>

<span class="k">for</span> <span class="n">param_string</span><span class="p">,</span> <span class="n">param</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">([</span><span class="s">"_u"</span><span class="p">,</span> <span class="s">"_v"</span><span class="p">,</span> <span class="s">"_t"</span><span class="p">],</span>
                               <span class="p">[</span><span class="n">param_u</span><span class="p">,</span> <span class="n">param_v</span><span class="p">,</span> <span class="n">param_t</span><span class="p">]):</span>

    <span class="n">server</span><span class="p">.</span><span class="n">retrieve</span><span class="p">({</span>
        <span class="s">"class"</span><span class="p">:</span> <span class="s">"ei"</span><span class="p">,</span>
        <span class="s">"dataset"</span><span class="p">:</span> <span class="s">"interim"</span><span class="p">,</span>
        <span class="s">"date"</span><span class="p">:</span> <span class="s">"2017-07-01/to/2017-07-31"</span><span class="p">,</span>
        <span class="s">"expver"</span><span class="p">:</span> <span class="s">"1"</span><span class="p">,</span>
        <span class="s">"grid"</span><span class="p">:</span> <span class="s">"1.5/1.5"</span><span class="p">,</span>
        <span class="s">"levelist"</span><span class="p">:</span> <span class="s">"1/2/3/5/7/10/20/30/50/70/100/125/150/175/200/225/250/300/350/400/450/500/550/600/650/700/750/775/800/825/850/875/900/925/950/975/1000"</span><span class="p">,</span>
        <span class="s">"levtype"</span><span class="p">:</span> <span class="s">"pl"</span><span class="p">,</span>
        <span class="s">"param"</span><span class="p">:</span> <span class="n">param</span><span class="p">,</span>
        <span class="s">"step"</span><span class="p">:</span> <span class="s">"0"</span><span class="p">,</span>
        <span class="s">"stream"</span><span class="p">:</span> <span class="s">"oper"</span><span class="p">,</span>
        <span class="s">"format"</span><span class="p">:</span> <span class="s">"netcdf"</span><span class="p">,</span>
        <span class="s">"time"</span><span class="p">:</span> <span class="s">"00:00:00/06:00:00/12:00:00/18:00:00"</span><span class="p">,</span>
        <span class="s">"type"</span><span class="p">:</span> <span class="s">"an"</span><span class="p">,</span>
        <span class="s">"target"</span><span class="p">:</span> <span class="s">"2017-07-01/to/2017-07-31"</span> <span class="o">+</span> <span class="n">param_string</span> <span class="o">+</span> <span class="s">".nc"</span><span class="p">,</span>
    <span class="p">})</span>
</code></pre></div></div>

<p>I learnt the above steps on these pages:</p>
<ul>
  <li><a href="https://software.ecmwf.int/wiki/display/WEBAPI/Access+ECMWF+Public+Datasets#AccessECMWFPublicDatasets-python">ECMWF python library</a></li>
  <li><a href="https://pypi.python.org/pypi/setuptools">Python setuptool</a></li>
</ul>
:ET